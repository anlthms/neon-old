# ----------------------------------------------------------------------------
# Copyright 2014 Nervana Systems Inc.  All rights reserved.
# ----------------------------------------------------------------------------

!obj:experiments.FitPredictErrorExperiment {
  inference_sets: ['validation', 'train'],
  inference_metrics: ['auc'],

  dataset: &dsvid !obj:datasets.BCI {
      repo_path: '~/data',
      #serialized_path: '~/data/bci.pkl',
      sample_pct: 100,
      data_type: 'vid',
  },

  weight_init: &wt_init !obj:params.UniformValGen {
    low: -0.1,
    high: 0.1,
  },

  lrules: [
      &gdm {
        type: gradient_descent_momentum,
        lr_params: {
          learning_rate: 0.0001,
          momentum_params: {
            type: constant,
            coef: 0.90,
          },
        },
      },
      &ada {
        type: adadelta,
        lr_params: {
          rho: &ro 0.999,
          epsilon: &eps 0.000000001,
        },
      },
  ],

  model: !obj:models.MLP {
    num_epochs: 15,
    batch_size: &bs 128,
    layers: [
      &datalayer !obj:layers.DataLayer {
        name: d0,
        is_local: True,
        nofm: 8,
        ofmshape: [16, 16, 16],
        dataset: *dsvid,
      },
      !obj:layers.ConvLayer {
        name: layer1,
        activation: !obj:transforms.RectLin {},
        nofm: 64,
        fshape: [2, 2, 2],
        stride: 1,
        lrule_init: *ada,
        weight_init: *wt_init,
      },
      !obj:layers.PoolingLayer {
        name: layer2,
        op: 'max',
        fshape: [2, 2, 2],
        stride: 2,
      },
      !obj:layers.ConvLayer {
        name: layer3,
        activation: !obj:transforms.RectLin {},
        nofm: 128,
        fshape: [2, 2, 2],
        stride: 1,
        lrule_init: *ada,
        weight_init: *wt_init,
      },
      !obj:layers.PoolingLayer {
        name: layer4,
        op: 'max',
        fshape: [2, 2, 2],
        stride: 2,
      },
      !obj:layers.ConvLayer {
        name: layer3,
        activation: !obj:transforms.RectLin {},
        nofm: 256,
        fshape: [2, 2, 2],
        stride: 1,
        lrule_init: *ada,
        weight_init: *wt_init,
      },
      !obj:layers.PoolingLayer {
        name: layer4,
        op: 'max',
        fshape: [2, 2, 2],
        stride: 2,
      },
      !obj:layers.FCLayer {
        name: layer5,
        nout: 128,
        activation: !obj:transforms.RectLin {},
        lrule_init: *ada,
        weight_init: *wt_init,
      },
      !obj:layers.DropOutLayer {
        name: dropout,
        keep: 0.5,
      },
      !obj:layers.FCLayer {
        name: layer5,
        nout: 64,
        activation: !obj:transforms.RectLin {},
        lrule_init: *ada,
        weight_init: *wt_init,
      },
      !obj:layers.DropOutLayer {
        name: dropout,
        keep: 0.5,
      },
      &lastlayer !obj:layers.FCLayer {
        name: output,
        nout: 2,
        activation: !obj:transforms.Logistic {},
        lrule_init: *ada,
        weight_init: *wt_init,
      },
      &costlayer !obj:layers.CostLayer {
        name: cost,
        ref_layer: *datalayer,
        cost: !obj:transforms.CrossEntropy {},
      },
    ],
  },

  logging: {
    level: 20,
    format: '%(asctime)-15s %(levelname)s:%(module)s - %(message)s'
  },
}
