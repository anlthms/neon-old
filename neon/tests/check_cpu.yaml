# ----------------------------------------------------------------------------
# Copyright 2014 Nervana Systems Inc.  All rights reserved.
# ----------------------------------------------------------------------------
# Configuration for sanity checking layers.

!obj:experiments.FitPredictErrorExperiment {
  backend: &be !obj:backends.CPU {
    rng_seed: 0,
  },

  dataset: &ds !obj:datasets.ToyImages {
    backend: *be,
    repo_path: '/usr/local/data',
    sample_pct: 100,
  },

  model: !obj:models.deprecated.mlp.MLP {
    backend: *be,
    num_epochs: 2,
    batch_size: &bs 32,
    dataset: *ds,
    learning_rate: &lr 0.01,
    layers: [
      !obj:layers.deprecated.layer.ConvLayer {
        name: layer0,
        backend: *be,
        batch_size: *bs,
        pos: 0,
        learning_rule: !obj:optimizers.GradientDescentMomentum {
          name: layer0lr,
          lr_params: {
            learning_rate: *lr,
            backend: *be,
            momentum_params: &mm {
              type: constant,
              coef: 0.90,
            },
          },
        },
        nifm: 3,
        nofm: 1,
        ifmshape: [32, 32],
        fshape: [3, 3],
        stride: 1,
        weight_init: !obj:params.UniformValGen {
          backend: *be,
          low: -0.1,
          high: 0.1,
        },
      },
      !obj:layers.deprecated.layer.MaxPoolingLayer {
        name: layer1,
        backend: *be,
        batch_size: *bs,
        pos: 1,
        nifm: 1,
        ifmshape: [30, 30],
        fshape: [2, 2],
        stride: 1,
      },
      !obj:layers.deprecated.layer.LCNLayer {
        name: layer2,
        backend: *be,
        batch_size: *bs,
        pos: 2,
        nifm: 1,
        ifmshape: [29, 29],
        fshape: [3, 3],
        stride: 1,
      },
      !obj:layers.deprecated.layer.LocalFilteringLayer {
        name: layer3,
        backend: *be,
        batch_size: *bs,
        pos: 3,
        pretraining: False,
        sparsity: 0.0,
        tied_weights: False,
        learning_rule: !obj:optimizers.GradientDescentMomentum {
          name: layer3lr,
          lr_params: {
            learning_rate: *lr,
            backend: *be,
            momentum_params: *mm,
          },
        },
        nifm: 1,
        nofm: 4,
        ifmshape: [29, 29],
        fshape: [2, 2],
        stride: 1,
        weight_init: !obj:params.UniformValGen {
          backend: *be,
          low: -0.1,
          high: 0.1,
        },
      },
      !obj:layers.deprecated.layer.AveragePoolingLayer {
        name: layer4,
        backend: *be,
        batch_size: *bs,
        pos: 4,
        nifm: 4,
        ifmshape: [28, 28],
        fshape: [2, 2],
        stride: 2,
      },
      !obj:layers.deprecated.layer.L2PoolingLayer {
        name: layer5,
        backend: *be,
        batch_size: *bs,
        pos: 5,
        nifm: 4,
        ifmshape: [14, 14],
        fshape: [2, 2],
        stride: 1,
      },
      !obj:layers.deprecated.layer.CrossMapPoolingLayer {
        name: layer6,
        backend: *be,
        activation: !obj:transforms.RectLin {},
        batch_size: *bs,
        pos: 6,
        learning_rule: !obj:optimizers.GradientDescentMomentum {
          name: rule,
          lr_params: {
            learning_rate: *lr,
            backend: *be,
            momentum_params: *mm,
          },
        },
        nifm: 4,
        nofm: 2,
        ifmshape: [13, 13],
        weight_init: !obj:params.UniformValGen {
          backend: *be,
          low: 0.0,
          high: 0.1,
        },
      },
      !obj:layers.deprecated.layer.Layer {
        name: layer7,
        backend: *be,
        batch_size: *bs,
        pos: 7,
        learning_rule: !obj:optimizers.GradientDescentMomentum {
          name: layer7lr,
          lr_params: {
            learning_rate: *lr,
            backend: *be,
            momentum_params: *mm,
          },
        },
        nin: 338,
        nout: 100,
        activation: !obj:transforms.RectLin {},
        weight_init: !obj:params.UniformValGen {
          backend: *be,
          low: -0.1,
          high: 0.1,
          bias_init: 0.0,
        },
      },
      &lastlayer !obj:layers.deprecated.layer.Layer {
        name: output,
        backend: *be,
        batch_size: *bs,
        pos: 8,
        learning_rule: !obj:optimizers.GradientDescentMomentum {
          name: outputlr,
          lr_params: {
            learning_rate: *lr,
            backend: *be,
            momentum_params: *mm,
          },
        },
        nin: 100,
        nout: 2,
        activation: !obj:transforms.Logistic {},
        weight_init: !obj:params.UniformValGen {
          backend: *be,
          low: -0.1,
          high: 0.1,
        },
      },
    ],
    cost: !obj:transforms.CrossEntropy {
      olayer: *lastlayer,
      shortcut_deriv: False,
    },
  },

  logging: {
    level: 20,
    format: '%(asctime)-15s %(levelname)s:%(module)s - %(message)s'
  },
}
