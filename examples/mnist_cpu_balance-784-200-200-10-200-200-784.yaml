# ----------------------------------------------------------------------------
# Copyright 2014 Nervana Systems Inc.  All rights reserved.
# ----------------------------------------------------------------------------
# Experiment settings to train/test a Balance Neural Net on full
# MNIST.

 !obj:neon.experiments.generate_output.GenOutputExperiment {
  zparam: 0.0,
  olayout: [12, 6],
  fshape: [28, 28],
  figure_filename: 'ofn.png',

  backend: &be !obj:neon.backends.gpu.GPU {
    rng_seed: 0,
    seterr_handling: {
      all: 'warn',
    },
  },

  # MNIST data
  dataset: &ds !obj:neon.datasets.mnist.MNIST {
    backend: *be,
    repo_path: '/usr/local/data',
    sample_pct: 100,
  },

  lrule: &adad {
    type: adadelta,
    lr_params: {
      epsilon: 0.000001,
      rho: 0.95,
      backend: *be,
    },
  },

  wt_cfgs: [
    &wt_init_a {
      type: autoscale,
      bias_init: 0.0,
    },
    &wt_init_b {
      type: autoscale,
      bias_init: 0.0,
      relu: 1,
    },
  ],

  # simple Balance model specification
  model: !obj:neon.models.balance.Balance {
    # serialized_path: './balance-simple.pkl',
    backend: *be,
    num_epochs: 20,
    batch_size: &bs 100,
    layers: [
      &datalayer !obj:neon.models.layer2.DataLayer {
        name: d0,
        dataset: *ds,
        nout: 784,
      },
      &h0 !obj:neon.models.layer2.FCLayer {
        name: h0,
        lrule_init: *adad,
        weight_init: *wt_init_b,
        activation: !obj:neon.transforms.rectified.RectLin {},
        nout: 200,
      },
      &h1 !obj:neon.models.layer2.FCLayer {
        name: h1,
        lrule_init: *adad,
        weight_init: *wt_init_a,
        nout: 200,
      },
      &blayer !obj:neon.models.layer2.BranchLayer {
        name: blayer,
        sublayers: [
          &classlayer !obj:neon.models.layer2.FCLayer {
            name: classlayer,
            lrule_init: *adad,
            weight_init: *wt_init_a,
            activation: !obj:neon.transforms.softmax.Softmax {},
            nout: &zidx 10,
          },
          &stylelayer !obj:neon.models.layer2.FCLayer {
            name: stylelayer,
            lrule_init: *adad,
            weight_init: *wt_init_a,
            nout: 2,
          },
        ],
      },
      &h3 !obj:neon.models.layer2.FCLayer {
        name: h3,
        lrule_init: *adad,
        weight_init: *wt_init_a,
        nout: 200,
      },
      &h4 !obj:neon.models.layer2.FCLayer {
        name: h4,
        lrule_init: *adad,
        weight_init: *wt_init_b,
        activation: !obj:neon.transforms.rectified.RectLin {},
        nout: 200,
      },
      &outlayer !obj:neon.models.layer2.FCLayer {
        name: outlayer,
        lrule_init: *adad,
        weight_init: *wt_init_a,
        nout: 784,
      },
      &sumsqcostlayer !obj:neon.models.layer2.CostLayer {
        name: cost,
        ref_layer: *datalayer,
        ref_label: output,
        cost: !obj:neon.transforms.sum_squared.SumSquaredDiffs {},
      },
    ],
    classlayers: [
      *datalayer,
      *h0,
      *h1,
      *classlayer,
      # !obj:neon.models.layer2.ActivationLayer {
      #   name: softmax,
      #   activation: !obj:neon.transforms.softmax.Softmax {},
      # },
      &xentcostlayer !obj:neon.models.layer2.CostLayer {
        name: cost,
        ref_layer: *datalayer,
        cost: !obj:neon.transforms.cross_entropy.CrossEntropy {
          scale: 10,
        },
      },
    ],
    stylelayers: [
      *datalayer,
      *h0,
      *h1,
      *blayer,
      &xcovcostlayer !obj:neon.models.layer2.CostLayer {
        name: cost,
        ref_layer: *datalayer,
        cost: !obj:neon.transforms.xcov.XCovariance {
          blkidx: 10,
          scale: 10,
        },
      },
    ],
    zidx: *zidx,
  },

  # logging options that are passed to logging.basicConfig
  # level value thresholds (set level lower to display them):
  #   CRITICAL 50
  #   ERROR    40
  #   WARNING  30
  #   INFO     20
  #   DEBUG    10
  #   NOTSET    0
  logging: {
    level: 20,
    format: '%(asctime)-15s %(levelname)s:%(module)s - %(message)s'
  },
}
