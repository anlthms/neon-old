# Experiment settings to train/test a RBM on MNIST.
# template for DBM layers

!obj:neon.experiments.fit.FitExperiment {
  backend: &be !obj:neon.backends._cudanet.Cudanet {
    rng_seed: 0,
  },

  datasets: [
    # MNIST data
    !obj:neon.datasets.mnist.MNIST {
      backend: *be,
      repo_path: '/usr/local/data',
      sample_pct: 100,
      serialized_path: '/usr/local/data/MNIST/mnist-Cudanet.pkl',
    },
  ],
  
  # RBM model specification
  model: !obj:neon.models.rbm.RBM {
    backend: *be,
    num_epochs: 60,
    batch_size: &bs 100,
    learning_rate: &lr 0.01,
    momentum: {
      type: linear_monotone, #constant, nesterov
      initial_coef: 0.99,
      start_epoch: 5,
      saturate_epoch: 5,
      saturated_coef: 0.90,
    },
    cost: !obj:neon.transforms.sum_squared.SumSquaredDiffs {},
    serialized_path: './rbm-cudanet60.pkl',
    layers: [
      !obj:neon.models.layer.RBMLayer {
        name: vis2hid,
        backend: *be,
        batch_size: *bs,
        pos: 0,
        learning_rate: *lr,
        nin: 785, # num inputs + 1 for bias
        nout: 1001, # num outputs + 1 for bias
        activation: !obj:neon.transforms.logistic.Logistic {},
        weight_init: {
          type: normal,
          loc: 0.0,
          scale: 0.01,
        },
      },
    ],
  },
  
  # logging options that are passed to logging.basicConfig
  # level value thresholds (set level lower to display them):
  #   CRITICAL 50
  #   ERROR    40
  #   WARNING  30
  #   INFO     20
  #   DEBUG    10
  #   NOTSET    0
  logging: {
    level: 20,
    format: '%(asctime)-15s %(levelname)s:%(module)s - %(message)s'
  },
}
