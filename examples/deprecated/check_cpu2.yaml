# ----------------------------------------------------------------------------
# Copyright 2014 Nervana Systems Inc.  All rights reserved.
# ----------------------------------------------------------------------------
# Configuration for sanity checking different types of layers.
# With an RNG seed value of 0, should see a value of 0.437500

!obj:experiments.FitPredictErrorExperiment {

  dataset: &ds !obj:datasets.ToyImages {
    repo_path: '~/data',
    sample_pct: 100,
  },

  weight_inits: [
    &wt_init !obj:params.UniformValGen {
      low: -0.1,
      high: 0.1,
    },
    &wt_initb !obj:params.UniformValGen {
      low: -0.1,
      high: 0.1,
      bias_init: 0.0,
    },
  ],

  lrule: &gdm {
    type: gradient_descent_momentum,
    lr_params: {
      learning_rate: 0.01,
      momentum_params: {
        type: constant,
        coef: 0.90,
      },
    },
  },

  model: !obj:models.MLP {
    num_epochs: 10,
    batch_size: &bs 32,
    layers: [
      &datalayer !obj:layers.DataLayer {
        name: d0,
        is_local: True,
        nofm: 3,
        ofmshape: [32, 32],
      },
      !obj:layers.ConvLayer {
        name: layer0,
        nofm: 1,
        fshape: [3, 3],
        weight_init: *wt_init,
        lrule_init: *gdm,
      },
      !obj:layers.PoolingLayer {
        name: layer1,
        op: 'max',
        fshape: [2, 2],
        stride: 1,
      },
      !obj:layers.LocalContrastNormLayer {
        name: layer2,
        alpha: 0.001,
        beta: 0.75,
        ksize: 2,
      },
      !obj:layers.ConvLayer {
        name: layer3,
        nofm: 4,
        fshape: [2, 2],
        local_conv: True,
        weight_init: *wt_init,
        lrule_init: *gdm,
      },
      !obj:layers.PoolingLayer {
        name: layer4,
        op: 'avg',
        fshape: [2, 2],
        stride: 2,
      },
      !obj:layers.PoolingLayer {
        name: layer5,
        op: 'l2',
        fshape: [2, 2],
      },
      !obj:layers.CrossMapPoolingLayer {
        name: layer6,
        nofm: 2,
        weight_init: *wt_init,
        lrule_init: *gdm,
        activation: !obj:transforms.RectLin {},
      },
      !obj:layers.FCLayer {
        name: layer7,
        nout: 100,
        weight_init: *wt_initb,
        lrule_init: *gdm,
        activation: !obj:transforms.RectLin {},
      },
      &lastlayer !obj:layers.FCLayer {
        name: output,
        nout: 2,
        weight_init: *wt_init,
        lrule_init: *gdm,
        activation: !obj:transforms.Logistic {},
      },
      &costlayer !obj:layers.CostLayer {
        name: cost,
        ref_layer: *datalayer,
        cost: !obj:transforms.CrossEntropy {},
      },
    ],
  },

  logging: {
    level: 20,
    format: '%(asctime)-15s %(levelname)s:%(module)s - %(message)s'
  },
}
