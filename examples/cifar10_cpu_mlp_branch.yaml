# ----------------------------------------------------------------------------
# Copyright 2014 Nervana Systems Inc.  All rights reserved.
# ----------------------------------------------------------------------------
# MLP on CIFAR-10

!obj:neon.experiments.fit_predict_err.FitPredictErrorExperiment {
  backend: &be !obj:neon.backends.cpu.CPU {
    rng_seed: 0,
  },

  dataset: &ds !obj:neon.datasets.cifar10.CIFAR10 {
    backend: *be,
    repo_path: '/usr/local/data',
    sample_pct: 10,
      # serialized_path: '/usr/local/data/CIFAR10/cifar10_10pct-Cpu.pkl',
  },

  weight_inits: [
    &wt_init {
      type: uniform,
      low: -0.1,
      high: 0.1,
    },
  ],

  lrule: &gdm {
    type: gradient_descent_momentum,
    lr_params: {
      learning_rate: 0.01,
      backend: *be,
      momentum_params: {
        type: constant,
        coef: 0.90,
      },
    },
  },

  model: !obj:neon.models.mlp.MLPB {
    backend: *be,
    num_epochs: 100,
    batch_size: &bs 100,
    layers: [
      &datalayer !obj:neon.models.layer2.DataLayer {
        name: d0,
        nout: 3072,
      },
      !obj:neon.models.layer2.FCLayer {
        name: h0,
        nout: 200,
        lrule_init: *gdm,
        weight_init: *wt_init,
        activation: !obj:neon.transforms.rectified.RectLin {},
      },
      !obj:neon.models.layer2.BranchLayer {
        name: blayer,
        sublayers: [
          !obj:neon.models.layer2.FCLayer {
            name: blayer1,
            nout: 40,
            lrule_init: *gdm,
            weight_init: *wt_init,
            activation: !obj:neon.transforms.rectified.RectLin {},
          },
          !obj:neon.models.layer2.FCLayer {
            name: blayer2,
            nout: 10,
            lrule_init: *gdm,
            weight_init: *wt_init,
            activation: !obj:neon.transforms.rectified.RectLin {},
          },
        ],
      },
      &lastlayer !obj:neon.models.layer2.FCLayer {
        name: output,
        nout: 10,
        lrule_init: *gdm,
        weight_init: *wt_init,
        activation: !obj:neon.transforms.logistic.Logistic {},
      },
      &costlayer !obj:neon.models.layer2.CostLayer {
        name: cost,
        ref_layer: *datalayer,
        cost: !obj:neon.transforms.cross_entropy.CrossEntropy {},
      },
    ],
  },

  # logging options that are passed to logging.basicConfig
  # level value thresholds (set level lower to display them):
  #   CRITICAL 50
  #   ERROR    40
  #   WARNING  30
  #   INFO     20
  #   DEBUG    10
  #   NOTSET    0
  logging: {
    level: 20,
    format: '%(asctime)-15s %(levelname)s:%(module)s - %(message)s'
  },
}
