# ----------------------------------------------------------------------------
# Copyright 2014 Nervana Systems Inc.  All rights reserved.
# ----------------------------------------------------------------------------
# Experiment settings to train/test a Restricted Boltzmann Machine (RBM) on
# MNIST.  Can serve as a template for Deep Belief Network (DBN) layers.

!obj:neon.experiments.fit.FitExperiment {
  backend: &be !obj:neon.backends.cpu.CPU {
    rng_seed: 0,
  },
  
  datasets: [
    # MNIST data
    !obj:neon.datasets.mnist.MNIST {
      backend: *be,
      repo_path: '/usr/local/data',
      sample_pct: 100,
    },
  ],
  
  # RBM model specification
  model: !obj:neon.models.rbm.RBM {
    backend: *be,
    num_epochs: 20,
    batch_size: &bs 100,
    cost: !obj:neon.transforms.sum_squared.SumSquaredDiffs {},
    # serialized_path: './rbm-numpy20.pkl',
    layers: [
      !obj:neon.models.layer.RBMLayer {
        name: vis2hid,
        backend: *be,
        batch_size: *bs,
        pos: 0,
        learning_rule: !obj:neon.models.learning_rule.GradientDescent {
          name: vis2hidlr,
          lr_params: {
            learning_rate: &lr -0.01,
            backend: *be,
          },
        },
        nin: 785, # num inputs + 1 for bias
        nout: 1001, # num outputs + 1 for bias
        activation: !obj:neon.transforms.logistic.Logistic {},
        weight_init: {
          type: normal,
          loc: 0.0,
          scale: 0.01,
        },
      },
    ],
  },
  
  # logging options that are passed to logging.basicConfig
  # level value thresholds (set level lower to display them):
  #   CRITICAL 50
  #   ERROR    40
  #   WARNING  30
  #   INFO     20
  #   DEBUG    10
  #   NOTSET    0
  logging: {
    level: 20,
    format: '%(asctime)-15s %(levelname)s:%(module)s - %(message)s'
  },
}
